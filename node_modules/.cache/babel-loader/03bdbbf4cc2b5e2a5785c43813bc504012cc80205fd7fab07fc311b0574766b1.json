{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      searchUser: '',\n      interns: [],\n      filteredInterns: [],\n      searchText: '',\n      userList: []\n    };\n  },\n  mounted() {\n    // Fetch the user list from the API\n    this.fetchUserList();\n  },\n  methods: {\n    async search() {\n      try {\n        const response = await axios.get('https://reqres.in/api/users', {\n          params: {\n            q: this.searchUser\n          }\n        });\n        this.interns = response.data.data;\n        this.filterInterns();\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    filterInterns() {\n      this.filteredInterns = this.interns.filter(intern => {\n        const fullName = `${intern.first_name} ${intern.last_name}`.toLowerCase();\n        return fullName.includes(this.searchUser.toLowerCase());\n      });\n    },\n    fetchUserList() {\n      // Make an API call to retrieve the user list\n      // You can use the axios library or the built-in fetch API\n      // Here's an example using fetch:\n\n      fetch('https://reqres.in/api/users').then(response => response.json()).then(data => {\n        // Update the user list with the fetched data\n        this.userList = data.data.map(user => ({\n          id: user.id,\n          fullName: `${user.first_name} ${user.last_name}`,\n          avatar: user.avatar\n        }));\n      }).catch(error => {\n        console.error('Failed to fetch user list:', error);\n      });\n    },\n    editUser(userId) {\n      // Handle the edit button click\n      // You can implement the edit functionality here\n      console.log('Edit user:', userId);\n    },\n    deleteUser(userId) {\n      // Handle the delete button click\n      // You can implement the delete functionality here\n      console.log('Delete user:', userId);\n    }\n  }\n};","map":{"version":3,"names":["axios","data","searchUser","interns","filteredInterns","searchText","userList","mounted","fetchUserList","methods","search","response","get","params","q","filterInterns","error","console","filter","intern","fullName","first_name","last_name","toLowerCase","includes","fetch","then","json","map","user","id","avatar","catch","editUser","userId","log","deleteUser"],"sources":["C:\\Users\\User\\Desktop\\Client\\vue-starter-project\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\r\n    <div>\r\n    <div class=\"search-container\">\r\n      <input type=\"text\" placeholder=\"Search...\" v-model=\"searchUser\" @input=\"search\" />\r\n      <button class=\"add-user-btn\">Add User</button>\r\n    </div>\r\n    <ul>\r\n      <li v-for=\"intern in filteredInterns\" :key=\"intern.id\">\r\n        {{ intern.first_name }} {{ intern.last_name }}\r\n      </li>\r\n    </ul>\r\n  </div>\r\n\r\n    <div class=\"user-list\">\r\n      <div v-for=\"user in userList\" :key=\"user.id\" class=\"user-item\">\r\n        <div class=\"user-avatar\">\r\n          <img :src=\"user.avatar\" alt=\"User Avatar\">\r\n        </div>\r\n        <div class=\"user-details\">\r\n          <div class=\"user-name\">{{ user.fullName }}</div>\r\n          <div class=\"user-actions\">\r\n            <button @click=\"editUser(user.id)\">Edit</button>\r\n            <button @click=\"deleteUser(user.id)\">Delete</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        searchUser: '',\r\n        interns: [],\r\n        filteredInterns: [],\r\n        searchText: '',\r\n        userList: [],\r\n      };\r\n    },\r\n    mounted() {\r\n      // Fetch the user list from the API\r\n      this.fetchUserList();\r\n    },\r\n    methods: {\r\n    \r\n     async search() {\r\n      try {\r\n        const response = await axios.get('https://reqres.in/api/users', {\r\n          params: {\r\n            q: this.searchUser,\r\n          },\r\n        });\r\n\r\n        this.interns = response.data.data;\r\n        this.filterInterns();\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    filterInterns() {\r\n      this.filteredInterns = this.interns.filter((intern) => {\r\n        const fullName = `${intern.first_name} ${intern.last_name}`.toLowerCase();\r\n        return fullName.includes(this.searchUser.toLowerCase());\r\n      });\r\n    }, \r\n      fetchUserList() {\r\n        // Make an API call to retrieve the user list\r\n        // You can use the axios library or the built-in fetch API\r\n        // Here's an example using fetch:\r\n  \r\n        fetch('https://reqres.in/api/users')\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            // Update the user list with the fetched data\r\n            this.userList = data.data.map(user => ({\r\n              id: user.id,\r\n              fullName: `${user.first_name} ${user.last_name}`,\r\n              avatar: user.avatar,\r\n            }));\r\n          })\r\n          .catch(error => {\r\n            console.error('Failed to fetch user list:', error);\r\n          });\r\n      },\r\n      editUser(userId) {\r\n        // Handle the edit button click\r\n        // You can implement the edit functionality here\r\n        console.log('Edit user:', userId);\r\n      },\r\n      deleteUser(userId) {\r\n        // Handle the delete button click\r\n        // You can implement the delete functionality here\r\n        console.log('Delete user:', userId);\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  .search-container {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\ninput[type=\"text\"] {\r\n  margin-right: 10px;\r\n}\r\n\r\n.add-user-btn {\r\n  background-color: green;\r\n  color: white;\r\n  border: none;\r\n  padding: 5px 10px;\r\n    }\r\n  .user-list {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .user-item {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 10px;\r\n    border-bottom: 1px solid #ccc;\r\n  }\r\n  \r\n  .user-avatar img {\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 50%;\r\n    object-fit: cover;\r\n    margin-right: 10px;\r\n  }\r\n  \r\n  .user-name {\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .user-actions button {\r\n    margin-left: 10px;\r\n  }\r\n  </style>\r\n  "],"mappings":"AA8BE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,EAAE;MACdC,OAAO,EAAE,EAAE;MACXC,eAAe,EAAE,EAAE;MACnBC,UAAU,EAAE,EAAE;MACdC,QAAQ,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR;IACA,IAAI,CAACC,aAAa,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IAER,MAAMC,MAAMA,CAAA,EAAG;MACd,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMX,KAAK,CAACY,GAAG,CAAC,6BAA6B,EAAE;UAC9DC,MAAM,EAAE;YACNC,CAAC,EAAE,IAAI,CAACZ;UACV;QACF,CAAC,CAAC;QAEF,IAAI,CAACC,OAAM,GAAIQ,QAAQ,CAACV,IAAI,CAACA,IAAI;QACjC,IAAI,CAACc,aAAa,CAAC,CAAC;MACtB,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACDD,aAAaA,CAAA,EAAG;MACd,IAAI,CAACX,eAAc,GAAI,IAAI,CAACD,OAAO,CAACe,MAAM,CAAEC,MAAM,IAAK;QACrD,MAAMC,QAAO,GAAK,GAAED,MAAM,CAACE,UAAU,IAAIF,MAAM,CAACG,SAAU,EAAC,CAACC,WAAW,CAAC,CAAC;QACzE,OAAOH,QAAQ,CAACI,QAAQ,CAAC,IAAI,CAACtB,UAAU,CAACqB,WAAW,CAAC,CAAC,CAAC;MACzD,CAAC,CAAC;IACJ,CAAC;IACCf,aAAaA,CAAA,EAAG;MACd;MACA;MACA;;MAEAiB,KAAK,CAAC,6BAA6B,EAChCC,IAAI,CAACf,QAAO,IAAKA,QAAQ,CAACgB,IAAI,CAAC,CAAC,EAChCD,IAAI,CAACzB,IAAG,IAAK;QACZ;QACA,IAAI,CAACK,QAAO,GAAIL,IAAI,CAACA,IAAI,CAAC2B,GAAG,CAACC,IAAG,KAAM;UACrCC,EAAE,EAAED,IAAI,CAACC,EAAE;UACXV,QAAQ,EAAG,GAAES,IAAI,CAACR,UAAU,IAAIQ,IAAI,CAACP,SAAU,EAAC;UAChDS,MAAM,EAAEF,IAAI,CAACE;QACf,CAAC,CAAC,CAAC;MACL,CAAC,EACAC,KAAK,CAAChB,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MACpD,CAAC,CAAC;IACN,CAAC;IACDiB,QAAQA,CAACC,MAAM,EAAE;MACf;MACA;MACAjB,OAAO,CAACkB,GAAG,CAAC,YAAY,EAAED,MAAM,CAAC;IACnC,CAAC;IACDE,UAAUA,CAACF,MAAM,EAAE;MACjB;MACA;MACAjB,OAAO,CAACkB,GAAG,CAAC,cAAc,EAAED,MAAM,CAAC;IACrC;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}