{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      searchQuery: '',\n      currentPage: 1,\n      itemsPerPage: 11 // Display 11 users per page\n    };\n  },\n\n  computed: {\n    usersNumer() {\n      return this.$store.state.filteredUserList.length + 1;\n    },\n    filteredUserList() {\n      return this.$store.state.filteredUserList.map(user => ({\n        ...user\n      }));\n    },\n    totalPages() {\n      const totalUsers = this.filteredUserList.length;\n      return Math.ceil(totalUsers / this.itemsPerPage);\n    },\n    visiblePages() {\n      const totalPages = this.totalPages;\n      const currentPage = this.currentPage;\n      const offset = 5; // Number of visible pagination numbers on each side of the current page\n\n      let startPage = currentPage - offset;\n      let endPage = currentPage + offset;\n      if (startPage < 1) {\n        endPage += Math.abs(startPage) + 1;\n        startPage = 1;\n      }\n      if (endPage > totalPages) {\n        startPage -= endPage - totalPages;\n        endPage = totalPages;\n      }\n      if (startPage < 1) {\n        startPage = 1;\n      }\n      const pages = [];\n      for (let i = startPage; i <= endPage; i++) {\n        pages.push(i);\n      }\n      return pages;\n    },\n    currentPageUsers() {\n      const start = (this.currentPage - 1) * this.itemsPerPage;\n      const end = start + this.itemsPerPage;\n      return this.filteredUserList.slice(start, end);\n    }\n  },\n  mounted() {\n    if (this.$store.state.userList.length === 0) {\n      this.$store.dispatch('fetchUserList');\n    }\n  },\n  methods: {\n    searchUsers() {\n      this.$store.commit('filterUserList', this.searchQuery);\n    },\n    deleteUser(userId) {\n      this.$store.dispatch('deleteUser', userId);\n    },\n    setCurrentPage(page) {\n      this.currentPage = page;\n    }\n  }\n};","map":{"version":3,"names":["data","searchQuery","currentPage","itemsPerPage","computed","usersNumer","$store","state","filteredUserList","length","map","user","totalPages","totalUsers","Math","ceil","visiblePages","offset","startPage","endPage","abs","pages","i","push","currentPageUsers","start","end","slice","mounted","userList","dispatch","methods","searchUsers","commit","deleteUser","userId","setCurrentPage","page"],"sources":["C:\\Users\\User\\Desktop\\Client\\vue-starter-project\\src\\components\\Hello.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search-container\">\r\n      <input type=\"text\" placeholder=\"Search...\" v-model=\"searchQuery\" @input=\"searchUsers\" />\r\n      <router-link :to=\"{ name: 'add-user', params: { id: usersNumer }}\">Add user</router-link>\r\n    </div>\r\n    <ul>\r\n      <li v-for=\"user in currentPageUsers\" :key=\"user.id\">\r\n        <div class=\"user-item\">\r\n          <div class=\"user-avatar\">\r\n            <img :src=\"user.avatar\" alt=\"User Avatar\">\r\n          </div>\r\n          <div class=\"user-details\">\r\n            <div class=\"user-name\">\r\n              <span>{{ user.first_name }} </span>\r\n              <span>{{ user.last_name }}</span>\r\n            </div>\r\n            <div class=\"user-actions\">\r\n              <router-link :to=\"{ name: 'edit-user', params: { id: user.id } }\">Edit</router-link>\r\n              <button @click=\"deleteUser(user.id)\">Delete</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n    <div class=\"pagination\">\r\n      <span\r\n        class=\"pagination-item\"\r\n        v-for=\"page in visiblePages\"\r\n        :key=\"page\"\r\n        :class=\"{ 'active': page === currentPage }\"\r\n        @click=\"setCurrentPage(page)\"\r\n      >\r\n        <span class=\"pagination-number\">{{ page }}</span>\r\n        <span class=\"pagination-markings\"></span>\r\n      </span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      searchQuery: '',\r\n      currentPage: 1,\r\n      itemsPerPage: 11, // Display 11 users per page\r\n    };\r\n  },\r\n  computed: {\r\n    usersNumer() {\r\n      return this.$store.state.filteredUserList.length + 1;\r\n    },\r\n    filteredUserList() {\r\n      return this.$store.state.filteredUserList.map((user) => ({ ...user }));\r\n    },\r\n    totalPages() {\r\n      const totalUsers = this.filteredUserList.length;\r\n      return Math.ceil(totalUsers / this.itemsPerPage);\r\n    },\r\n    visiblePages() {\r\n      const totalPages = this.totalPages;\r\n      const currentPage = this.currentPage;\r\n      const offset = 5; // Number of visible pagination numbers on each side of the current page\r\n\r\n      let startPage = currentPage - offset;\r\n      let endPage = currentPage + offset;\r\n\r\n      if (startPage < 1) {\r\n        endPage += Math.abs(startPage) + 1;\r\n        startPage = 1;\r\n      }\r\n\r\n      if (endPage > totalPages) {\r\n        startPage -= endPage - totalPages;\r\n        endPage = totalPages;\r\n      }\r\n\r\n      if (startPage < 1) {\r\n        startPage = 1;\r\n      }\r\n\r\n      const pages = [];\r\n      for (let i = startPage; i <= endPage; i++) {\r\n        pages.push(i);\r\n      }\r\n\r\n      return pages;\r\n    },\r\n    currentPageUsers() {\r\n      const start = (this.currentPage - 1) * this.itemsPerPage;\r\n      const end = start + this.itemsPerPage;\r\n      return this.filteredUserList.slice(start, end);\r\n    },\r\n  },\r\n  mounted() {\r\n    if (this.$store.state.userList.length === 0) {\r\n      this.$store.dispatch('fetchUserList');\r\n    }\r\n  },\r\n  methods: {\r\n    searchUsers() {\r\n      this.$store.commit('filterUserList', this.searchQuery);\r\n    },\r\n    deleteUser(userId) {\r\n      this.$store.dispatch('deleteUser', userId);\r\n    },\r\n    setCurrentPage(page) {\r\n      this.currentPage = page;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.search-container {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.search-container input[type=\"text\"] {\r\n  margin-right: 10px;\r\n  padding: 5px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n}\r\n\r\n.add-user-btn {\r\n  background-color: green;\r\n  color: white;\r\n  border: none;\r\n  padding: 5px 10px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.user-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.user-item {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 10px;\r\n  border-bottom: 1px solid #ccc;\r\n}\r\n\r\n.user-avatar img {\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  object-fit: cover;\r\n  margin-right: 10px;\r\n}\r\n\r\n.user-name {\r\n  font-weight: bold;\r\n}\r\n\r\n.user-actions button {\r\n  margin-left: 10px;\r\n  padding: 5px 10px;\r\n  background-color: red;\r\n  color: white;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n}\r\n\r\n.pagination {\r\n  margin-top: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.pagination-item {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: 5px;\r\n  cursor: pointer;\r\n}\r\n\r\n.pagination-number {\r\n  width: 25px;\r\n  height: 25px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #ccc;\r\n  color: #fff;\r\n  border-radius: 4px;\r\n}\r\n\r\n.pagination-item.active .pagination-number {\r\n  background-color: #a5673f; /* Light brown color for active page */\r\n}\r\n\r\n.pagination-markings {\r\n  width: 0;\r\n  height: 0;\r\n  border-top: 5px solid transparent;\r\n  border-bottom: 5px solid transparent;\r\n  border-left: 5px solid #333;\r\n  margin-left: 2px;\r\n  margin-right: 2px;\r\n}\r\n</style>\r\n"],"mappings":";AAyCA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,EAAE;MACfC,WAAW,EAAE,CAAC;MACdC,YAAY,EAAE,EAAE,CAAE;IACpB,CAAC;EACH,CAAC;;EACDC,QAAQ,EAAE;IACRC,UAAUA,CAAA,EAAG;MACX,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,gBAAgB,CAACC,MAAK,GAAI,CAAC;IACtD,CAAC;IACDD,gBAAgBA,CAAA,EAAG;MACjB,OAAO,IAAI,CAACF,MAAM,CAACC,KAAK,CAACC,gBAAgB,CAACE,GAAG,CAAEC,IAAI,KAAM;QAAE,GAAGA;MAAK,CAAC,CAAC,CAAC;IACxE,CAAC;IACDC,UAAUA,CAAA,EAAG;MACX,MAAMC,UAAS,GAAI,IAAI,CAACL,gBAAgB,CAACC,MAAM;MAC/C,OAAOK,IAAI,CAACC,IAAI,CAACF,UAAS,GAAI,IAAI,CAACV,YAAY,CAAC;IAClD,CAAC;IACDa,YAAYA,CAAA,EAAG;MACb,MAAMJ,UAAS,GAAI,IAAI,CAACA,UAAU;MAClC,MAAMV,WAAU,GAAI,IAAI,CAACA,WAAW;MACpC,MAAMe,MAAK,GAAI,CAAC,EAAE;;MAElB,IAAIC,SAAQ,GAAIhB,WAAU,GAAIe,MAAM;MACpC,IAAIE,OAAM,GAAIjB,WAAU,GAAIe,MAAM;MAElC,IAAIC,SAAQ,GAAI,CAAC,EAAE;QACjBC,OAAM,IAAKL,IAAI,CAACM,GAAG,CAACF,SAAS,IAAI,CAAC;QAClCA,SAAQ,GAAI,CAAC;MACf;MAEA,IAAIC,OAAM,GAAIP,UAAU,EAAE;QACxBM,SAAQ,IAAKC,OAAM,GAAIP,UAAU;QACjCO,OAAM,GAAIP,UAAU;MACtB;MAEA,IAAIM,SAAQ,GAAI,CAAC,EAAE;QACjBA,SAAQ,GAAI,CAAC;MACf;MAEA,MAAMG,KAAI,GAAI,EAAE;MAChB,KAAK,IAAIC,CAAA,GAAIJ,SAAS,EAAEI,CAAA,IAAKH,OAAO,EAAEG,CAAC,EAAE,EAAE;QACzCD,KAAK,CAACE,IAAI,CAACD,CAAC,CAAC;MACf;MAEA,OAAOD,KAAK;IACd,CAAC;IACDG,gBAAgBA,CAAA,EAAG;MACjB,MAAMC,KAAI,GAAI,CAAC,IAAI,CAACvB,WAAU,GAAI,CAAC,IAAI,IAAI,CAACC,YAAY;MACxD,MAAMuB,GAAE,GAAID,KAAI,GAAI,IAAI,CAACtB,YAAY;MACrC,OAAO,IAAI,CAACK,gBAAgB,CAACmB,KAAK,CAACF,KAAK,EAAEC,GAAG,CAAC;IAChD;EACF,CAAC;EACDE,OAAOA,CAAA,EAAG;IACR,IAAI,IAAI,CAACtB,MAAM,CAACC,KAAK,CAACsB,QAAQ,CAACpB,MAAK,KAAM,CAAC,EAAE;MAC3C,IAAI,CAACH,MAAM,CAACwB,QAAQ,CAAC,eAAe,CAAC;IACvC;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZ,IAAI,CAAC1B,MAAM,CAAC2B,MAAM,CAAC,gBAAgB,EAAE,IAAI,CAAChC,WAAW,CAAC;IACxD,CAAC;IACDiC,UAAUA,CAACC,MAAM,EAAE;MACjB,IAAI,CAAC7B,MAAM,CAACwB,QAAQ,CAAC,YAAY,EAAEK,MAAM,CAAC;IAC5C,CAAC;IACDC,cAAcA,CAACC,IAAI,EAAE;MACnB,IAAI,CAACnC,WAAU,GAAImC,IAAI;IACzB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}