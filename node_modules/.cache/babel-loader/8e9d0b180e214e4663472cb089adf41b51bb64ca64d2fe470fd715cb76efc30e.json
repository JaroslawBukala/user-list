{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Full Name:\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Avatar URL:\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Save Changes\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $data.user ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h2\", null, \"Edit User \" + _toDisplayString($data.user.id), 1 /* TEXT */), _createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.saveChanges && $options.saveChanges(...args), [\"prevent\"]))\n  }, [_createCommentVNode(\" Form fields for editing user details \"), _createElementVNode(\"div\", null, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.user.first_name = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user.first_name]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.user.last_name = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user.last_name]])]), _createElementVNode(\"div\", null, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.user.avatar = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.user.avatar]])]), _createCommentVNode(\" Buttons for saving changes and deleting user \"), _createElementVNode(\"div\", null, [_hoisted_4, _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = $event => $options.deleteUser($data.user.id))\n  }, \"Delete\")])], 32 /* HYDRATE_EVENTS */)])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"names":["_createElementVNode","type","$data","user","_createElementBlock","_hoisted_1","_toDisplayString","id","onSubmit","_cache","_withModifiers","args","$options","saveChanges","_createCommentVNode","_hoisted_2","first_name","$event","last_name","_hoisted_3","avatar","_hoisted_4","onClick","deleteUser"],"sources":["C:\\Users\\User\\Desktop\\Client\\vue-starter-project\\src\\components\\Edit.vue"],"sourcesContent":["<template>\r\n    <div v-if=\"user\">\r\n      <h2>Edit User {{ user.id }}</h2>\r\n  \r\n      <form @submit.prevent=\"saveChanges\">\r\n        <!-- Form fields for editing user details -->\r\n        <div>\r\n          <label>Full Name:</label>\r\n          <input type=\"text\" v-model=\"user.first_name\" />\r\n          <input type=\"text\" v-model=\"user.last_name\" />\r\n        </div>\r\n        <div>\r\n          <label>Avatar URL:</label>\r\n          <input type=\"text\" v-model=\"user.avatar\" />\r\n        </div>\r\n  \r\n        <!-- Buttons for saving changes and deleting user -->\r\n        <div>\r\n          <button type=\"submit\">Save Changes</button>\r\n          <button @click=\"deleteUser(user.id)\">Delete</button>        </div>\r\n      </form>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        user: null\r\n      };\r\n    },\r\n    computed: {\r\n      filteredUserList() {\r\n        return this.$route.params.id;\r\n      },\r\n    },\r\n    created() {\r\n      this.fetchUser();\r\n    },\r\n  \r\n    methods: {\r\n      async fetchUser() {\r\n        const id = this.$route.params.id;\r\n        try {\r\n          const response = await axios.get(`https://reqres.in/api/users/${id}`);\r\n          this.user = response.data.data;\r\n        } catch (error) {\r\n          console.error('Failed to fetch user details:', error);\r\n        }\r\n      },\r\n  \r\n      saveChanges() {\r\n        this.$store.dispatch('updateUser', this.user)\r\n          .then(() => {\r\n            this.$router.push({ name: 'home' });\r\n          })\r\n          .catch((error) => {\r\n            console.error('Failed to update user:', error);\r\n          });\r\n      },\r\n\r\n      deleteUser(userId) {\r\n        this.$store.dispatch('deleteUser', userId);\r\n        this.$route.push('home')\r\n      },\r\n    }\r\n  };\r\n  </script>\r\n  "],"mappings":";;;;gCAOUA,mBAAA,CAAyB,eAAlB,YAAU;gCAKjBA,mBAAA,CAA0B,eAAnB,aAAW;gCAMlBA,mBAAA,CAA2C;EAAnCC,IAAI,EAAC;AAAQ,GAAC,cAAY;;;SAjB7BC,KAAA,CAAAC,IAAI,I,cAAfC,mBAAA,CAoBM,OAAAC,UAAA,GAnBJL,mBAAA,CAAgC,YAA5B,YAAU,GAAAM,gBAAA,CAAGJ,KAAA,CAAAC,IAAI,CAACI,EAAE,kBAExBP,mBAAA,CAgBO;IAhBAQ,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;MAChCG,mBAAA,0CAA6C,EAC7Cd,mBAAA,CAIM,cAHJe,UAAyB,E,gBACzBf,mBAAA,CAA+C;IAAxCC,IAAI,EAAC,MAAM;+DAAUC,KAAA,CAAAC,IAAI,CAACa,UAAU,GAAAC,MAAA;iDAAff,KAAA,CAAAC,IAAI,CAACa,UAAU,E,mBAC3ChB,mBAAA,CAA8C;IAAvCC,IAAI,EAAC,MAAM;+DAAUC,KAAA,CAAAC,IAAI,CAACe,SAAS,GAAAD,MAAA;iDAAdf,KAAA,CAAAC,IAAI,CAACe,SAAS,E,KAE5ClB,mBAAA,CAGM,cAFJmB,UAA0B,E,gBAC1BnB,mBAAA,CAA2C;IAApCC,IAAI,EAAC,MAAM;+DAAUC,KAAA,CAAAC,IAAI,CAACiB,MAAM,GAAAH,MAAA;iDAAXf,KAAA,CAAAC,IAAI,CAACiB,MAAM,E,KAGzCN,mBAAA,kDAAqD,EACrDd,mBAAA,CAEoE,cADlEqB,UAA2C,EAC3CrB,mBAAA,CAAoD;IAA3CsB,OAAK,EAAAb,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAAEL,QAAA,CAAAW,UAAU,CAACrB,KAAA,CAAAC,IAAI,CAACI,EAAE;KAAG,QAAM,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}