{"ast":null,"code":"export default {\n  props: ['selectedUser'],\n  data() {\n    return {\n      editedUser: {\n        id: this.selectedUser.id,\n        fullName: this.selectedUser.fullName,\n        avatar: this.selectedUser.avatar\n      }\n    };\n  },\n  methods: {\n    saveChanges() {\n      // Implement the logic to save the changes made to the user's details\n      // For example, make an API call to update the user on the server\n\n      // After saving the changes, emit an event to notify the parent component\n      this.$emit('user-updated', this.editedUser);\n    },\n    deleteUser() {\n      // Implement the logic to delete the user\n      // For example, make an API call to delete the user on the server\n\n      // After deleting the user, emit an event to notify the parent component\n      this.$emit('user-deleted', this.editedUser.id);\n    }\n  }\n};","map":{"version":3,"names":["props","data","editedUser","id","selectedUser","fullName","avatar","methods","saveChanges","$emit","deleteUser"],"sources":["C:\\Users\\User\\Desktop\\Client\\vue-starter-project\\src\\components\\EditUser.vue"],"sourcesContent":["<template>\r\n    <div>\r\n        <h2>Edit User {{ selectedUser.id }}</h2>\r\n\r\n      <form @submit.prevent=\"saveChanges\">\r\n        <!-- Form fields for editing user details -->\r\n        <div>\r\n          <label>Full Name:</label>\r\n          <input type=\"text\" v-model=\"editedUser.fullName\" />\r\n        </div>\r\n        <div>\r\n          <label>Avatar URL:</label>\r\n          <input type=\"text\" v-model=\"editedUser.avatar\" />\r\n        </div>\r\n        \r\n        <!-- Buttons for saving changes and deleting user -->\r\n        <div>\r\n          <button type=\"submit\">Save Changes</button>\r\n          <button @click=\"deleteUser\">Delete User</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </template>\r\n\r\n<script>\r\nexport default {\r\n  props: ['selectedUser'],\r\n  data() {\r\n    return {\r\n      editedUser: {\r\n        id: this.selectedUser.id,\r\n        fullName: this.selectedUser.fullName,\r\n        avatar: this.selectedUser.avatar,\r\n      },\r\n    };\r\n  },\r\n  methods: {\r\n    saveChanges() {\r\n      // Implement the logic to save the changes made to the user's details\r\n      // For example, make an API call to update the user on the server\r\n  \r\n      // After saving the changes, emit an event to notify the parent component\r\n      this.$emit('user-updated', this.editedUser);\r\n    },\r\n    deleteUser() {\r\n      // Implement the logic to delete the user\r\n      // For example, make an API call to delete the user on the server\r\n  \r\n      // After deleting the user, emit an event to notify the parent component\r\n      this.$emit('user-deleted', this.editedUser.id);\r\n    },\r\n  },\r\n};\r\n</script>\r\n  "],"mappings":"AAyBA,eAAe;EACbA,KAAK,EAAE,CAAC,cAAc,CAAC;EACvBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE;QACVC,EAAE,EAAE,IAAI,CAACC,YAAY,CAACD,EAAE;QACxBE,QAAQ,EAAE,IAAI,CAACD,YAAY,CAACC,QAAQ;QACpCC,MAAM,EAAE,IAAI,CAACF,YAAY,CAACE;MAC5B;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZ;MACA;;MAEA;MACA,IAAI,CAACC,KAAK,CAAC,cAAc,EAAE,IAAI,CAACP,UAAU,CAAC;IAC7C,CAAC;IACDQ,UAAUA,CAAA,EAAG;MACX;MACA;;MAEA;MACA,IAAI,CAACD,KAAK,CAAC,cAAc,EAAE,IAAI,CAACP,UAAU,CAACC,EAAE,CAAC;IAChD;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}