{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Full Name:\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"label\", null, \"Avatar URL:\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Save Changes\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [$options.user ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [_createElementVNode(\"h2\", null, \"Edit User \" + _toDisplayString($options.user.id), 1 /* TEXT */), _createElementVNode(\"form\", {\n    onSubmit: _cache[4] || (_cache[4] = _withModifiers((...args) => $options.saveChanges && $options.saveChanges(...args), [\"prevent\"]))\n  }, [_createCommentVNode(\" Form fields for editing user details \"), _createElementVNode(\"div\", null, [_hoisted_1, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $options.user.first_name = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $options.user.first_name]]), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $options.user.last_name = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $options.user.last_name]])]), _createElementVNode(\"div\", null, [_hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $options.user.avatar = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $options.user.avatar]])]), _createCommentVNode(\" Buttons for saving changes and deleting user \"), _createElementVNode(\"div\", null, [_hoisted_3, _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.deleteUser && $options.deleteUser(...args))\n  }, \"Delete User\")])], 32 /* HYDRATE_EVENTS */)], 64 /* STABLE_FRAGMENT */)) : (_openBlock(), _createElementBlock(\"p\", _hoisted_4, \"Loading user...\"))]);\n}","map":{"version":3,"names":["_createElementVNode","type","_createElementBlock","$options","user","_Fragment","key","_toDisplayString","id","onSubmit","_cache","_withModifiers","args","saveChanges","_createCommentVNode","_hoisted_1","first_name","$event","last_name","_hoisted_2","avatar","_hoisted_3","onClick","deleteUser","_hoisted_4"],"sources":["C:\\Users\\User\\Desktop\\Client\\vue-starter-project\\src\\components\\Edit.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <template v-if=\"user\">\r\n      <h2>Edit User {{ user.id }}</h2>\r\n\r\n      <form @submit.prevent=\"saveChanges\">\r\n        <!-- Form fields for editing user details -->\r\n        <div>\r\n          <label>Full Name:</label>\r\n          <input type=\"text\" v-model=\"user.first_name\" />\r\n          <input type=\"text\" v-model=\"user.last_name\" />\r\n        </div>\r\n        <div>\r\n          <label>Avatar URL:</label>\r\n          <input type=\"text\" v-model=\"user.avatar\" />\r\n        </div>\r\n\r\n        <!-- Buttons for saving changes and deleting user -->\r\n        <div>\r\n          <button type=\"submit\">Save Changes</button>\r\n          <button @click=\"deleteUser\">Delete User</button>\r\n        </div>\r\n      </form>\r\n    </template>\r\n\r\n    <template v-else>\r\n      <p>Loading user...</p>\r\n    </template>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapActions } from 'vuex';\r\n\r\nexport default {\r\n  computed: {\r\n    ...mapGetters(['getUserById']),\r\n    user() {\r\n      return this.getUserById(this.userId);\r\n    },\r\n    userId() {\r\n      return this.$route.params.id;\r\n    },\r\n  },\r\n  mounted() {\r\n    if (!this.user) {\r\n      this.fetchUser(this.userId); // Pass the userId parameter to fetchUser\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapActions(['fetchUser', 'updateUser', 'deleteUser']),\r\n    async saveChanges() {\r\n      try {\r\n        await this.updateUser(this.user);\r\n        this.$router.push({ name: 'home' });\r\n      } catch (error) {\r\n        console.error('Failed to update user:', error);\r\n      }\r\n    },\r\n    async deleteUser() {\r\n      try {\r\n        await this.deleteUser(this.user.id);\r\n        this.$router.push({ name: 'home' });\r\n      } catch (error) {\r\n        console.error('Failed to delete user:', error);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";gCAQUA,mBAAA,CAAyB,eAAlB,YAAU;gCAKjBA,mBAAA,CAA0B,eAAnB,aAAW;gCAMlBA,mBAAA,CAA2C;EAAnCC,IAAI,EAAC;AAAQ,GAAC,cAAY;;;;;uBAlB1CC,mBAAA,CA2BM,cA1BYC,QAAA,CAAAC,IAAI,I,cAApBF,mBAAA,CAqBWG,SAAA;IAAAC,GAAA;EAAA,IApBTN,mBAAA,CAAgC,YAA5B,YAAU,GAAAO,gBAAA,CAAGJ,QAAA,CAAAC,IAAI,CAACI,EAAE,kBAExBR,mBAAA,CAiBO;IAjBAS,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAAAC,cAAA,KAAAC,IAAA,KAAUT,QAAA,CAAAU,WAAA,IAAAV,QAAA,CAAAU,WAAA,IAAAD,IAAA,CAAW;MAChCE,mBAAA,0CAA6C,EAC7Cd,mBAAA,CAIM,cAHJe,UAAyB,E,gBACzBf,mBAAA,CAA+C;IAAxCC,IAAI,EAAC,MAAM;+DAAUE,QAAA,CAAAC,IAAI,CAACY,UAAU,GAAAC,MAAA;iDAAfd,QAAA,CAAAC,IAAI,CAACY,UAAU,E,mBAC3ChB,mBAAA,CAA8C;IAAvCC,IAAI,EAAC,MAAM;+DAAUE,QAAA,CAAAC,IAAI,CAACc,SAAS,GAAAD,MAAA;iDAAdd,QAAA,CAAAC,IAAI,CAACc,SAAS,E,KAE5ClB,mBAAA,CAGM,cAFJmB,UAA0B,E,gBAC1BnB,mBAAA,CAA2C;IAApCC,IAAI,EAAC,MAAM;+DAAUE,QAAA,CAAAC,IAAI,CAACgB,MAAM,GAAAH,MAAA;iDAAXd,QAAA,CAAAC,IAAI,CAACgB,MAAM,E,KAGzCN,mBAAA,kDAAqD,EACrDd,mBAAA,CAGM,cAFJqB,UAA2C,EAC3CrB,mBAAA,CAAgD;IAAvCsB,OAAK,EAAAZ,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAET,QAAA,CAAAoB,UAAA,IAAApB,QAAA,CAAAoB,UAAA,IAAAX,IAAA,CAAU;KAAE,aAAW,E,2EAM3CV,mBAAA,CAAsB,KAAAsB,UAAA,EAAnB,iBAAe,G"},"metadata":{},"sourceType":"module","externalDependencies":[]}