{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.filteredUserList, user => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: user.id\n    }, _toDisplayString(user.id), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))]), _createElementVNode(\"h2\", null, \"Edit User \" + _toDisplayString(_ctx.user.id), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_Fragment","_renderList","$options","filteredUserList","user","key","id","_toDisplayString","_ctx"],"sources":["C:\\Users\\User\\Desktop\\Client\\vue-starter-project\\src\\components\\Edit.vue"],"sourcesContent":["<template>\r\n\r\n    <ul>\r\n        <li v-for=\"user in filteredUserList\" :key=\"user.id\"> {{user.id}}</li>\r\n    </ul>\r\n    <h2>Edit User {{ user.id }}</h2>\r\n\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { mapGetters } from 'vuex';\r\n\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      // user: null\r\n    };\r\n  },\r\n  // computed: {\r\n  //   // ...mapGetters(['getUserList', 'getUserById'])\r\n  // },\r\n  computed: {\r\n    userId() {\r\n      console.log(this.$route.params.id + 'route params')\r\n      return this.$route.params.id;\r\n    },\r\n    filteredUserList() {\r\n        console.log(this.$store.state.userList + 'filtered user list in edit component')\r\n        return this.$store.state.userListser;\r\n      },\r\n  },\r\n\r\n  mounted() {\r\n    console.log(this.getFilteredUserList + 'filtered user list')\r\n    this.fetchUser();\r\n  },\r\n\r\n  methods: {\r\n    async fetchUser() {\r\n      try {\r\n        // const response = await axios.get(`https://reqres.in/api/users/${this.userId}`);\r\n        this.user =  await this.$store.state.userList.find(user => user.id === this.userId);\r\n        console.log(this.userId + 'brak id')\r\n        console.log(this.user + 'that is the user from the state')\r\n        // this.user = response.data.data;\r\n      } catch (error) {\r\n        console.error('Failed to fetch user details:', error);\r\n      }\r\n    },\r\n\r\n    async saveChanges() {\r\n      try {\r\n        await this.$store.dispatch('updateUser', this.user);\r\n        this.$router.push({ name: 'home' });\r\n      } catch (error) {\r\n        console.error('Failed to update user:', error);\r\n      }\r\n    },\r\n\r\n    async deleteUser() {\r\n      try {\r\n        await this.$store.dispatch('deleteUser', this.user.id);\r\n        this.$router.push({ name: 'home' });\r\n      } catch (error) {\r\n        console.error('Failed to delete user:', error);\r\n      }\r\n    },\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";;6DAEIA,mBAAA,CAEK,c,kBADDC,mBAAA,CAAqEC,SAAA,QAAAC,WAAA,CAAlDC,QAAA,CAAAC,gBAAgB,EAAxBC,IAAI;yBAAfL,mBAAA,CAAqE;MAA/BM,GAAG,EAAED,IAAI,CAACE;wBAAOF,IAAI,CAACE,EAAE;oCAElER,mBAAA,CAAgC,YAA5B,YAAU,GAAAS,gBAAA,CAAGC,IAAA,CAAAJ,IAAI,CAACE,EAAE,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}