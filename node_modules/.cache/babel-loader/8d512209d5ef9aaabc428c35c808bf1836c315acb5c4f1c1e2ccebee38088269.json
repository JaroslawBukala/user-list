{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapGetters } from 'vuex';\nexport default {\n  data() {\n    return {\n      user: null\n    };\n  },\n  computed: {\n    ...mapGetters(['getUserById'])\n  },\n  computed: {\n    filteredUserList() {\n      console.log(this.$store.state.filteredUserList);\n      return this.$store.state.filteredUserList;\n    },\n    userId() {\n      return this.$route.params.id;\n    }\n  },\n  mounted() {\n    if (this.$store.state.userList.length === 0) {\n      this.$store.dispatch('fetchUserList');\n    }\n  },\n  // mounted() {\n  //     try {\n  //       this.user = this.getUserById(this.userId);\n\n  //       if (!this.user) {\n  //         console.log('User not found in the store');\n  //         // Handle the case when the user is not found in the store.\n  //       }\n  //     } catch (error) {\n  //       console.error('Failed to fetch user details:', error);\n  //     }\n  // },\n\n  methods: {\n    async saveChanges() {\n      try {\n        await this.$store.dispatch('updateUser', this.user);\n        this.$router.push({\n          name: 'home'\n        });\n      } catch (error) {\n        console.error('Failed to update user:', error);\n      }\n    },\n    async deleteUser() {\n      try {\n        await this.$store.dispatch('deleteUser', this.user.id);\n        this.$router.push({\n          name: 'home'\n        });\n      } catch (error) {\n        console.error('Failed to delete user:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","data","user","computed","filteredUserList","console","log","$store","state","userId","$route","params","id","mounted","userList","length","dispatch","methods","saveChanges","$router","push","name","error","deleteUser"],"sources":["C:\\Users\\User\\Desktop\\Client\\vue-starter-project\\src\\components\\Edit.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"user\">\r\n    <h2>Edit User {{ user.id }}</h2>\r\n\r\n    <form @submit.prevent=\"saveChanges\">\r\n      <!-- Form fields for editing user details -->\r\n      <div>\r\n        <label>Full Name:</label>\r\n        <input type=\"text\" v-model=\"user.first_name\" />\r\n        <input type=\"text\" v-model=\"user.last_name\" />\r\n      </div>\r\n      <div>\r\n        <label>Avatar URL:</label>\r\n        <input type=\"text\" v-model=\"user.avatar\" />\r\n      </div>\r\n\r\n      <!-- Buttons for saving changes and deleting user -->\r\n      <div>\r\n        <button type=\"submit\">Save Changes</button>\r\n        <button @click=\"deleteUser\">Delete User</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      user: null\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters(['getUserById'])\r\n  },\r\n  \r\n  computed: {\r\n    filteredUserList() {\r\n        console.log(this.$store.state.filteredUserList)\r\n        return this.$store.state.filteredUserList;\r\n      },\r\n    userId() {\r\n      return this.$route.params.id;\r\n    },\r\n  },\r\n  mounted(){\r\n    if (this.$store.state.userList.length === 0) {\r\n        this.$store.dispatch('fetchUserList');\r\n    }\r\n  },\r\n  // mounted() {\r\n  //     try {\r\n  //       this.user = this.getUserById(this.userId);\r\n\r\n  //       if (!this.user) {\r\n  //         console.log('User not found in the store');\r\n  //         // Handle the case when the user is not found in the store.\r\n  //       }\r\n  //     } catch (error) {\r\n  //       console.error('Failed to fetch user details:', error);\r\n  //     }\r\n  // },\r\n\r\n  methods: {\r\n\r\n\r\n    async saveChanges() {\r\n      try {\r\n        await this.$store.dispatch('updateUser', this.user);\r\n        this.$router.push({ name: 'home' });\r\n      } catch (error) {\r\n        console.error('Failed to update user:', error);\r\n      }\r\n    },\r\n\r\n    async deleteUser() {\r\n      try {\r\n        await this.$store.dispatch('deleteUser', this.user.id);\r\n        this.$router.push({ name: 'home' });\r\n      } catch (error) {\r\n        console.error('Failed to delete user:', error);\r\n      }\r\n    },\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";AA0BA,SAASA,UAAS,QAAS,MAAM;AAEjC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGH,UAAU,CAAC,CAAC,aAAa,CAAC;EAC/B,CAAC;EAEDG,QAAQ,EAAE;IACRC,gBAAgBA,CAAA,EAAG;MACfC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,MAAM,CAACC,KAAK,CAACJ,gBAAgB;MAC9C,OAAO,IAAI,CAACG,MAAM,CAACC,KAAK,CAACJ,gBAAgB;IAC3C,CAAC;IACHK,MAAMA,CAAA,EAAG;MACP,OAAO,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;IAC9B;EACF,CAAC;EACDC,OAAOA,CAAA,EAAE;IACP,IAAI,IAAI,CAACN,MAAM,CAACC,KAAK,CAACM,QAAQ,CAACC,MAAK,KAAM,CAAC,EAAE;MACzC,IAAI,CAACR,MAAM,CAACS,QAAQ,CAAC,eAAe,CAAC;IACzC;EACF,CAAC;EACD;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAC,OAAO,EAAE;IAGP,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAM,IAAI,CAACX,MAAM,CAACS,QAAQ,CAAC,YAAY,EAAE,IAAI,CAACd,IAAI,CAAC;QACnD,IAAI,CAACiB,OAAO,CAACC,IAAI,CAAC;UAAEC,IAAI,EAAE;QAAO,CAAC,CAAC;MACrC,EAAE,OAAOC,KAAK,EAAE;QACdjB,OAAO,CAACiB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAED,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAM,IAAI,CAAChB,MAAM,CAACS,QAAQ,CAAC,YAAY,EAAE,IAAI,CAACd,IAAI,CAACU,EAAE,CAAC;QACtD,IAAI,CAACO,OAAO,CAACC,IAAI,CAAC;UAAEC,IAAI,EAAE;QAAO,CAAC,CAAC;MACrC,EAAE,OAAOC,KAAK,EAAE;QACdjB,OAAO,CAACiB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}