{"ast":null,"code":"export default {\n  data() {\n    return {\n      searchQuery: ''\n    };\n  },\n  computed: {\n    usersNumer() {\n      console.log(this.$store.state.filteredUserList.length + 'length of a user list');\n      return this.$store.state.filteredUserList.length + 1;\n    },\n    filteredUserList() {\n      console.log(this.$store.state.filteredUserList + 'USERS INSIDE HELLO');\n      return this.$store.state.filteredUserList.map(user => ({\n        ...user\n      }));\n\n      // return this.$store.state.filteredUserList;\n    }\n  },\n\n  mounted() {\n    if (this.$store.state.userList.length === 0) {\n      this.$store.dispatch('fetchUserList');\n    }\n    const userId = this.$route.params.userId;\n\n    // this.user = this.$store.state.filteredUserList.find(user => user.id === userId);\n    // console.log(this.user + 'USER IN HELLO') \n  },\n\n  methods: {\n    searchUsers() {\n      this.$store.commit('filterUserList', this.searchQuery);\n    },\n    deleteUser(userId) {\n      console.log(userId);\n      this.$store.dispatch('deleteUser', userId);\n    }\n  }\n};","map":{"version":3,"names":["data","searchQuery","computed","usersNumer","console","log","$store","state","filteredUserList","length","map","user","mounted","userList","dispatch","userId","$route","params","methods","searchUsers","commit","deleteUser"],"sources":["C:\\Users\\User\\Desktop\\Client\\vue-starter-project\\src\\components\\Hello.vue"],"sourcesContent":[" <template>\r\n    <div>\r\n      <div class=\"search-container\">\r\n        <input type=\"text\" placeholder=\"Search...\" v-model=\"searchQuery\" @input=\"searchUsers\" />\r\n        <router-link :to=\"{ name: 'add-user', params: { id: usersNumer }}\">Add user</router-link>\r\n      </div>\r\n      <ul>\r\n        <li v-for=\"user in filteredUserList\" :key=\"user.id\">\r\n          <div class=\"user-item\">\r\n            <div class=\"user-avatar\">\r\n              <img :src=\"user.avatar\" alt=\"User Avatar\">\r\n            </div>\r\n            <div class=\"user-details\">\r\n              <div class=\"user-name\">\r\n              <span>{{ user.first_name }}</span>\r\n              <span>{{ user.last_name }}</span>\r\n           </div>\r\n\r\n              <div class=\"user-actions\">\r\n                <router-link :to=\"{ name: 'edit-user', params: { id: user.id } }\">Edit</router-link>\r\n                <button @click=\"deleteUser(user.id)\">Delete</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </template>\r\n  \r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        searchQuery: '',\r\n      };\r\n    },\r\n    computed: {\r\n      usersNumer() {\r\n        console.log(this.$store.state.filteredUserList.length + 'length of a user list')\r\n        return this.$store.state.filteredUserList.length + 1;\r\n      },\r\n      filteredUserList() {\r\n        console.log(this.$store.state.filteredUserList + 'USERS INSIDE HELLO')\r\n        return this.$store.state.filteredUserList.map((user) => ({ ...user }));\r\n\r\n        // return this.$store.state.filteredUserList;\r\n      },\r\n    },\r\n\r\n    mounted() {\r\n      if (this.$store.state.userList.length === 0) {\r\n        this.$store.dispatch('fetchUserList');\r\n  }\r\n\r\n      const userId = this.$route.params.userId;\r\n      \r\n      // this.user = this.$store.state.filteredUserList.find(user => user.id === userId);\r\n      // console.log(this.user + 'USER IN HELLO') \r\n},\r\n\r\n    methods: {\r\n      searchUsers() {\r\n        this.$store.commit('filterUserList', this.searchQuery);\r\n      },\r\n  \r\n      deleteUser(userId) {\r\n        console.log(userId)\r\n        this.$store.dispatch('deleteUser', userId);\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  .search-container {\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .search-container input[type=\"text\"] {\r\n    margin-right: 10px;\r\n    padding: 5px;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n  }\r\n  \r\n  .add-user-btn {\r\n    background-color: green;\r\n    color: white;\r\n    border: none;\r\n    padding: 5px 10px;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .user-list {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .user-item {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 10px;\r\n    border-bottom: 1px solid #ccc;\r\n  }\r\n  \r\n  .user-avatar img {\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 50%;\r\n    object-fit: cover;\r\n    margin-right: 10px;\r\n  }\r\n  \r\n  .user-name {\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .user-actions button {\r\n    margin-left: 10px;\r\n    padding: 5px 10px;\r\n    background-color: red;\r\n    color: white;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n  }\r\n  </style>\r\n  "],"mappings":"AA+BE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAUA,CAAA,EAAG;MACXC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,gBAAgB,CAACC,MAAK,GAAI,uBAAuB;MAC/E,OAAO,IAAI,CAACH,MAAM,CAACC,KAAK,CAACC,gBAAgB,CAACC,MAAK,GAAI,CAAC;IACtD,CAAC;IACDD,gBAAgBA,CAAA,EAAG;MACjBJ,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,gBAAe,GAAI,oBAAoB;MACrE,OAAO,IAAI,CAACF,MAAM,CAACC,KAAK,CAACC,gBAAgB,CAACE,GAAG,CAAEC,IAAI,KAAM;QAAE,GAAGA;MAAK,CAAC,CAAC,CAAC;;MAEtE;IACF;EACF,CAAC;;EAEDC,OAAOA,CAAA,EAAG;IACR,IAAI,IAAI,CAACN,MAAM,CAACC,KAAK,CAACM,QAAQ,CAACJ,MAAK,KAAM,CAAC,EAAE;MAC3C,IAAI,CAACH,MAAM,CAACQ,QAAQ,CAAC,eAAe,CAAC;IAC3C;IAEI,MAAMC,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACF,MAAM;;IAExC;IACA;EACN,CAAC;;EAEGG,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACb,MAAM,CAACc,MAAM,CAAC,gBAAgB,EAAE,IAAI,CAACnB,WAAW,CAAC;IACxD,CAAC;IAEDoB,UAAUA,CAACN,MAAM,EAAE;MACjBX,OAAO,CAACC,GAAG,CAACU,MAAM;MAClB,IAAI,CAACT,MAAM,CAACQ,QAAQ,CAAC,YAAY,EAAEC,MAAM,CAAC;IAC5C;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}