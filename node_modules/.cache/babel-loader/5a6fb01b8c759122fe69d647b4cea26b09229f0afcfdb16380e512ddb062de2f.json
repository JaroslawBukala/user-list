{"ast":null,"code":"import { vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"search-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"add-user-btn\"\n}, \"Add User\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  class: \"user-list\"\n};\nconst _hoisted_4 = {\n  class: \"user-avatar\"\n};\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = {\n  class: \"user-details\"\n};\nconst _hoisted_7 = {\n  class: \"user-name\"\n};\nconst _hoisted_8 = {\n  class: \"user-actions\"\n};\nconst _hoisted_9 = [\"onClick\"];\nconst _hoisted_10 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Search...\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.searchText = $event),\n    onInput: _cache[1] || (_cache[1] = (...args) => $options.search && $options.search(...args))\n  }, null, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelText, $data.searchText]]), _hoisted_2]), _createCommentVNode(\" Rest of your application \")]), _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.userList, user => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: user.id,\n      class: \"user-item\"\n    }, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"img\", {\n      src: user.avatar,\n      alt: \"User Avatar\"\n    }, null, 8 /* PROPS */, _hoisted_5)]), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"div\", _hoisted_7, _toDisplayString(user.fullName), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"button\", {\n      onClick: $event => $options.editUser(user.id)\n    }, \"Edit\", 8 /* PROPS */, _hoisted_9), _createElementVNode(\"button\", {\n      onClick: $event => $options.deleteUser(user.id)\n    }, \"Delete\", 8 /* PROPS */, _hoisted_10)])])]);\n  }), 128 /* KEYED_FRAGMENT */))])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementVNode","_hoisted_1","type","placeholder","$data","searchText","$event","onInput","_cache","args","$options","search","_hoisted_2","_createCommentVNode","_hoisted_3","_createElementBlock","_Fragment","_renderList","userList","user","key","id","_hoisted_4","src","avatar","alt","_hoisted_6","_hoisted_7","_toDisplayString","fullName","_hoisted_8","onClick","editUser","_hoisted_9","deleteUser","_hoisted_10"],"sources":["C:\\Users\\User\\Desktop\\Client\\vue-starter-project\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\r\n    <div>\r\n    <div class=\"search-container\">\r\n      <input type=\"text\" placeholder=\"Search...\" v-model=\"searchText\" @input=\"search\" />\r\n      <button class=\"add-user-btn\">Add User</button>\r\n    </div>\r\n    <!-- Rest of your application -->\r\n  </div>\r\n    <div class=\"user-list\">\r\n      <div v-for=\"user in userList\" :key=\"user.id\" class=\"user-item\">\r\n        <div class=\"user-avatar\">\r\n          <img :src=\"user.avatar\" alt=\"User Avatar\">\r\n        </div>\r\n        <div class=\"user-details\">\r\n          <div class=\"user-name\">{{ user.fullName }}</div>\r\n          <div class=\"user-actions\">\r\n            <button @click=\"editUser(user.id)\">Edit</button>\r\n            <button @click=\"deleteUser(user.id)\">Delete</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        searchText: '',\r\n        interns: [],\r\n        filteredInterns: [],\r\n        searchText: '',\r\n        userList: [],\r\n      };\r\n    },\r\n    mounted() {\r\n      // Fetch the user list from the API\r\n      this.fetchUserList();\r\n    },\r\n    methods: {\r\n    \r\n     async search() {\r\n      try {\r\n        const response = await axios.get('https://reqres.in/api/users', {\r\n          params: {\r\n            q: this.searchText,\r\n          },\r\n        });\r\n\r\n        this.interns = response.data.data;\r\n        this.filterInterns();\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    filterInterns() {\r\n      this.filteredInterns = this.interns.filter((intern) => {\r\n        const fullName = `${intern.first_name} ${intern.last_name}`.toLowerCase();\r\n        return fullName.includes(this.searchText.toLowerCase());\r\n      });\r\n    }, \r\n      fetchUserList() {\r\n        // Make an API call to retrieve the user list\r\n        // You can use the axios library or the built-in fetch API\r\n        // Here's an example using fetch:\r\n  \r\n        fetch('https://reqres.in/api/users')\r\n          .then(response => response.json())\r\n          .then(data => {\r\n            // Update the user list with the fetched data\r\n            this.userList = data.data.map(user => ({\r\n              id: user.id,\r\n              fullName: `${user.first_name} ${user.last_name}`,\r\n              avatar: user.avatar,\r\n            }));\r\n          })\r\n          .catch(error => {\r\n            console.error('Failed to fetch user list:', error);\r\n          });\r\n      },\r\n      editUser(userId) {\r\n        // Handle the edit button click\r\n        // You can implement the edit functionality here\r\n        console.log('Edit user:', userId);\r\n      },\r\n      deleteUser(userId) {\r\n        // Handle the delete button click\r\n        // You can implement the delete functionality here\r\n        console.log('Delete user:', userId);\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  .search-container {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\ninput[type=\"text\"] {\r\n  margin-right: 10px;\r\n}\r\n\r\n.add-user-btn {\r\n  background-color: green;\r\n  color: white;\r\n  border: none;\r\n  padding: 5px 10px;\r\n    }\r\n  .user-list {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  \r\n  .user-item {\r\n    display: flex;\r\n    align-items: center;\r\n    padding: 10px;\r\n    border-bottom: 1px solid #ccc;\r\n  }\r\n  \r\n  .user-avatar img {\r\n    width: 50px;\r\n    height: 50px;\r\n    border-radius: 50%;\r\n    object-fit: cover;\r\n    margin-right: 10px;\r\n  }\r\n  \r\n  .user-name {\r\n    font-weight: bold;\r\n  }\r\n  \r\n  .user-actions button {\r\n    margin-left: 10px;\r\n  }\r\n  </style>\r\n  "],"mappings":";;EAESA,KAAK,EAAC;AAAkB;gCAE3BC,mBAAA,CAA8C;EAAtCD,KAAK,EAAC;AAAc,GAAC,UAAQ;;EAIlCA,KAAK,EAAC;AAAW;;EAEbA,KAAK,EAAC;AAAa;;;EAGnBA,KAAK,EAAC;AAAc;;EAClBA,KAAK,EAAC;AAAW;;EACjBA,KAAK,EAAC;AAAc;;;;6DAd/BC,mBAAA,CAMI,cALJA,mBAAA,CAGM,OAHNC,UAGM,G,gBAFJD,mBAAA,CAAkF;IAA3EE,IAAI,EAAC,MAAM;IAACC,WAAW,EAAC,WAAW;+DAAUC,KAAA,CAAAC,UAAU,GAAAC,MAAA;IAAGC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,MAAA,IAAAD,QAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;iEAA1BL,KAAA,CAAAC,UAAU,E,GAC9DO,UAA8C,C,GAEhDC,mBAAA,8BAAiC,C,GAEjCb,mBAAA,CAaM,OAbNc,UAaM,I,kBAZJC,mBAAA,CAWMC,SAAA,QAAAC,WAAA,CAXcb,KAAA,CAAAc,QAAQ,EAAhBC,IAAI;yBAAhBJ,mBAAA,CAWM;MAXyBK,GAAG,EAAED,IAAI,CAACE,EAAE;MAAEtB,KAAK,EAAC;QACjDC,mBAAA,CAEM,OAFNsB,UAEM,GADJtB,mBAAA,CAA0C;MAApCuB,GAAG,EAAEJ,IAAI,CAACK,MAAM;MAAEC,GAAG,EAAC;2CAE9BzB,mBAAA,CAMM,OANN0B,UAMM,GALJ1B,mBAAA,CAAgD,OAAhD2B,UAAgD,EAAAC,gBAAA,CAAtBT,IAAI,CAACU,QAAQ,kBACvC7B,mBAAA,CAGM,OAHN8B,UAGM,GAFJ9B,mBAAA,CAAgD;MAAvC+B,OAAK,EAAAzB,MAAA,IAAEI,QAAA,CAAAsB,QAAQ,CAACb,IAAI,CAACE,EAAE;OAAG,MAAI,iBAAAY,UAAA,GACvCjC,mBAAA,CAAoD;MAA3C+B,OAAK,EAAAzB,MAAA,IAAEI,QAAA,CAAAwB,UAAU,CAACf,IAAI,CAACE,EAAE;OAAG,QAAM,iBAAAc,WAAA,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}