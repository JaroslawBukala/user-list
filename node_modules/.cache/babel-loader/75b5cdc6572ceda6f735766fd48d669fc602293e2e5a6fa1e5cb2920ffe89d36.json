{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapActions } from 'vuex';\nexport default {\n  data() {\n    return {\n      firstName: '',\n      lastName: '',\n      avatar: '',\n      avatarPreview: null\n    };\n  },\n  computed: {\n    userId() {\n      return this.$route.params.id;\n    }\n  },\n  methods: {\n    ...mapActions(['createUser']),\n    addUser() {\n      const newUser = {\n        id: this.userId,\n        first_name: this.firstName,\n        last_name: this.lastName,\n        avatar: this.avatar\n      };\n      try {\n        this.createUser(newUser);\n        this.$router.push({\n          name: 'home'\n        });\n      } catch (error) {\n        console.error('Failed to add user:', error);\n      }\n\n      // Clear the form inputs after successful submission\n      this.firstName = '';\n      this.lastName = '';\n      this.avatar = '';\n      this.avatarPreview = null;\n    },\n    // Add the deleteUser method to handle the \"Delete\" button action\n    deleteUser() {\n      // Implement the logic to delete the user\n      // You can dispatch an action to your Vuex store to delete the user or use any other appropriate method here.\n      // For example:\n      // this.$store.dispatch('deleteUser', this.userId);\n      // this.$router.push({ name: 'home' }); // Redirect to home page after deletion\n    },\n    openFileDialog() {\n      this.$refs.fileInput.click();\n    },\n    handleFileChange(event) {\n      // ... Your existing code for handling file input ...\n    }\n  }\n};","map":{"version":3,"names":["mapActions","data","firstName","lastName","avatar","avatarPreview","computed","userId","$route","params","id","methods","addUser","newUser","first_name","last_name","createUser","$router","push","name","error","console","deleteUser","openFileDialog","$refs","fileInput","click","handleFileChange","event"],"sources":["C:\\Users\\User\\Desktop\\Client\\vue-starter-project\\src\\components\\Hello.vue"],"sourcesContent":["<template>\r\n  <div class=\"title-layout\">\r\n    <h2 class=\"add-user-title\">Add User</h2>\r\n  </div>\r\n  <div class=\"add-user-container\">\r\n    <div class=\"add-user-section\">\r\n      <form @submit.prevent=\"addUser\">\r\n        <div class=\"flex\">\r\n          <div class=\"form-field-inline\">\r\n            <label for=\"firstName\">First Name:</label>\r\n            <input type=\"text\" v-model=\"firstName\" required>\r\n          </div>\r\n          <div class=\"margin\"></div>\r\n          <div class=\"form-field-inline\">\r\n            <label for=\"lastName\">Last Name:</label>\r\n            <input type=\"text\" v-model=\"lastName\" required>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-field-inline\">\r\n          <button type=\"submit\">\r\n            <i class=\"fas fa-pencil-alt\"></i> <!-- Font Awesome \"Edit\" icon -->\r\n          </button>\r\n          <button type=\"button\" @click=\"deleteUser\">\r\n            <i class=\"fas fa-trash\"></i> <!-- Font Awesome \"Delete\" icon -->\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    <div class=\"add-avatar-section\">\r\n      <!-- ... Your existing code for avatar and photo button ... -->\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapActions } from 'vuex';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      firstName: '',\r\n      lastName: '',\r\n      avatar: '',\r\n      avatarPreview: null,\r\n    };\r\n  },\r\n  computed: {\r\n    userId() {\r\n      return this.$route.params.id;\r\n    },\r\n  },\r\n  methods: {\r\n    ...mapActions(['createUser']),\r\n    addUser() {\r\n      const newUser = {\r\n        id: this.userId,\r\n        first_name: this.firstName,\r\n        last_name: this.lastName,\r\n        avatar: this.avatar,\r\n      };\r\n\r\n      try {\r\n        this.createUser(newUser);\r\n        this.$router.push({ name: 'home' });\r\n      } catch (error) {\r\n        console.error('Failed to add user:', error);\r\n      }\r\n\r\n      // Clear the form inputs after successful submission\r\n      this.firstName = '';\r\n      this.lastName = '';\r\n      this.avatar = '';\r\n      this.avatarPreview = null;\r\n    },\r\n    // Add the deleteUser method to handle the \"Delete\" button action\r\n    deleteUser() {\r\n      // Implement the logic to delete the user\r\n      // You can dispatch an action to your Vuex store to delete the user or use any other appropriate method here.\r\n      // For example:\r\n      // this.$store.dispatch('deleteUser', this.userId);\r\n      // this.$router.push({ name: 'home' }); // Redirect to home page after deletion\r\n    },\r\n    openFileDialog() {\r\n      this.$refs.fileInput.click();\r\n    },\r\n    handleFileChange(event) {\r\n      // ... Your existing code for handling file input ...\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* ... Your existing styles ... */\r\n</style>\r\n"],"mappings":";AAmCA,SAASA,UAAS,QAAS,MAAM;AAEjC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,EAAE;MACVC,aAAa,EAAE;IACjB,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,MAAMA,CAAA,EAAG;MACP,OAAO,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE;IAC9B;EACF,CAAC;EACDC,OAAO,EAAE;IACP,GAAGX,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC;IAC7BY,OAAOA,CAAA,EAAG;MACR,MAAMC,OAAM,GAAI;QACdH,EAAE,EAAE,IAAI,CAACH,MAAM;QACfO,UAAU,EAAE,IAAI,CAACZ,SAAS;QAC1Ba,SAAS,EAAE,IAAI,CAACZ,QAAQ;QACxBC,MAAM,EAAE,IAAI,CAACA;MACf,CAAC;MAED,IAAI;QACF,IAAI,CAACY,UAAU,CAACH,OAAO,CAAC;QACxB,IAAI,CAACI,OAAO,CAACC,IAAI,CAAC;UAAEC,IAAI,EAAE;QAAO,CAAC,CAAC;MACrC,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC7C;;MAEA;MACA,IAAI,CAAClB,SAAQ,GAAI,EAAE;MACnB,IAAI,CAACC,QAAO,GAAI,EAAE;MAClB,IAAI,CAACC,MAAK,GAAI,EAAE;MAChB,IAAI,CAACC,aAAY,GAAI,IAAI;IAC3B,CAAC;IACD;IACAiB,UAAUA,CAAA,EAAG;MACX;MACA;MACA;MACA;MACA;IAAA,CACD;IACDC,cAAcA,CAAA,EAAG;MACf,IAAI,CAACC,KAAK,CAACC,SAAS,CAACC,KAAK,CAAC,CAAC;IAC9B,CAAC;IACDC,gBAAgBA,CAACC,KAAK,EAAE;MACtB;IAAA;EAEJ;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}