{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { mapGetters } from 'vuex';\nexport default {\n  data() {\n    return {\n      firstName: '',\n      lastName: '',\n      avatar: ''\n    };\n  },\n  computed: {\n    ...mapGetters(['getUserList', 'getFilteredUserList', 'getUserById'])\n  },\n  computed: {\n    // user() {\n    //   console.log(this.$route.params.id + 'route params')\n    //   return \n    // },\n    user() {\n      console.log(this.$store.state.filteredUserList + 'USERS INSIDE EDIT');\n      return this.$store.state.filteredUserList[this.$route.params.id - 1];\n    }\n  },\n  mounted() {\n    // console.log(this.getFilteredUserList + 'filtered user list')\n    // this.fetchUser();\n  },\n  methods: {\n    //     async fetchUser() {\n    //       try {\n    //         this.user = this.$store.getters.getUserById(this.userId);\n    //       } catch (error) {\n    //         console.error('Failed to fetch user details:', error);\n    //       }\n    // },\n\n    // async fetchUser() {\n    //   try {\n    //     const response = await axios.get(`https://reqres.in/api/users/${this.userId}`);\n    //     this.user = this.$store.state.userList.find(user => user.id === this.userId);\n    //     console.log(this.userId + 'brak id')\n    //     console.log(this.user + 'that is the user from the state')\n    //     this.user = response.data.data;\n    //   } catch (error) {\n    //     console.error('Failed to fetch user details:', error);\n    //   }\n    // },\n\n    async addUser() {\n      const newUser = {\n        id: this.$route.params.id,\n        first_name: this.firstName,\n        last_name: this.lastName,\n        avatar: this.avatar\n      };\n      try {\n        await this.$store.dispatch('createUser', newUser);\n        this.$router.push({\n          name: 'home'\n        });\n      } catch (error) {\n        console.error('Failed to update user:', error);\n      }\n\n      // Clear the form inputs after successful submission\n      this.userId = null;\n      this.firstName = '';\n      this.lastName = '';\n      this.avatar = '';\n    },\n    async saveChanges() {\n      const updatedUser = {\n        id: this.userId,\n        first_name: this.firstName,\n        last_name: this.lastName,\n        avatar: this.avatar\n      };\n      try {\n        await this.$store.dispatch('updatedUser', this.user);\n        this.$router.push({\n          name: 'home'\n        });\n      } catch (error) {\n        console.error('Failed to update user:', error);\n      }\n    },\n    async deleteUser() {\n      try {\n        await this.$store.dispatch('deleteUser', this.user.id);\n        this.$router.push({\n          name: 'home'\n        });\n      } catch (error) {\n        console.error('Failed to delete user:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","mapGetters","data","firstName","lastName","avatar","computed","user","console","log","$store","state","filteredUserList","$route","params","id","mounted","methods","addUser","newUser","first_name","last_name","dispatch","$router","push","name","error","userId","saveChanges","updatedUser","deleteUser"],"sources":["C:\\Users\\User\\Desktop\\Client\\vue-starter-project\\src\\components\\Edit.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"user\">\r\n    <h2>Edit User {{ user.id }}</h2>\r\n\r\n    <form @submit.prevent=\"saveChanges\">\r\n      <!-- Form fields for editing user details -->\r\n      <div>\r\n        <label>Full Name:</label>\r\n        <input type=\"text\" v-model=\"user.first_name\" />\r\n        <input type=\"text\" v-model=\"user.last_name\" />\r\n      </div>\r\n      <div>\r\n        <label>Avatar URL:</label>\r\n        <input type=\"text\" v-model=\"user.avatar\" />\r\n      </div>\r\n\r\n      <!-- Buttons for saving changes and deleting user -->\r\n      <div>\r\n        <button type=\"submit\">Save Changes</button>\r\n        <button @click=\"deleteUser\">Delete User</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { mapGetters } from 'vuex';\r\n\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n        firstName: '',\r\n        lastName: '',\r\n        avatar: '',\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters(['getUserList', 'getFilteredUserList', 'getUserById'])\r\n  },\r\n  computed: {\r\n    // user() {\r\n    //   console.log(this.$route.params.id + 'route params')\r\n    //   return \r\n    // },\r\n    user() {\r\n        console.log(this.$store.state.filteredUserList + 'USERS INSIDE EDIT')\r\n        return this.$store.state.filteredUserList[this.$route.params.id - 1];\r\n      },\r\n  },\r\n\r\n  mounted() {\r\n    // console.log(this.getFilteredUserList + 'filtered user list')\r\n    // this.fetchUser();\r\n  },\r\n\r\n  methods: {\r\n//     async fetchUser() {\r\n//       try {\r\n//         this.user = this.$store.getters.getUserById(this.userId);\r\n//       } catch (error) {\r\n//         console.error('Failed to fetch user details:', error);\r\n//       }\r\n// },\r\n\r\n    // async fetchUser() {\r\n    //   try {\r\n    //     const response = await axios.get(`https://reqres.in/api/users/${this.userId}`);\r\n    //     this.user = this.$store.state.userList.find(user => user.id === this.userId);\r\n    //     console.log(this.userId + 'brak id')\r\n    //     console.log(this.user + 'that is the user from the state')\r\n    //     this.user = response.data.data;\r\n    //   } catch (error) {\r\n    //     console.error('Failed to fetch user details:', error);\r\n    //   }\r\n    // },\r\n\r\n\r\n    async addUser() {\r\n            const newUser = {\r\n            id : this.$route.params.id,\r\n            first_name: this.firstName,\r\n            last_name: this.lastName,\r\n            avatar: this.avatar,\r\n            };\r\n  \r\n        try {\r\n        await this.$store.dispatch('createUser', newUser);\r\n        this.$router.push({ name: 'home'});\r\n      } catch (error) {\r\n        console.error('Failed to update user:', error);\r\n      }\r\n  \r\n        // Clear the form inputs after successful submission\r\n        this.userId = null;\r\n        this.firstName = '';\r\n        this.lastName = '';\r\n        this.avatar = '';\r\n      },\r\n\r\n\r\n    async saveChanges() {\r\n      const updatedUser = {\r\n            id : this.userId,\r\n            first_name: this.firstName,\r\n            last_name: this.lastName,\r\n            avatar: this.avatar,\r\n            };\r\n      try {\r\n        await this.$store.dispatch('updatedUser', this.user);\r\n        this.$router.push({ name: 'home' });\r\n      } catch (error) {\r\n        console.error('Failed to update user:', error);\r\n      }\r\n    },\r\n\r\n    async deleteUser() {\r\n      try {\r\n        await this.$store.dispatch('deleteUser', this.user.id);\r\n        this.$router.push({ name: 'home' });\r\n      } catch (error) {\r\n        console.error('Failed to delete user:', error);\r\n      }\r\n    },\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";AA0BA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,UAAS,QAAS,MAAM;AAGjC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACHC,SAAS,EAAE,EAAE;MACbC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE;IACZ,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGL,UAAU,CAAC,CAAC,aAAa,EAAE,qBAAqB,EAAE,aAAa,CAAC;EACrE,CAAC;EACDK,QAAQ,EAAE;IACR;IACA;IACA;IACA;IACAC,IAAIA,CAAA,EAAG;MACHC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,gBAAe,GAAI,mBAAmB;MACpE,OAAO,IAAI,CAACF,MAAM,CAACC,KAAK,CAACC,gBAAgB,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAC,GAAI,CAAC,CAAC;IACtE;EACJ,CAAC;EAEDC,OAAOA,CAAA,EAAG;IACR;IACA;EAAA,CACD;EAEDC,OAAO,EAAE;IACX;IACA;IACA;IACA;IACA;IACA;IACA;;IAEI;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAGA,MAAMC,OAAOA,CAAA,EAAG;MACR,MAAMC,OAAM,GAAI;QAChBJ,EAAC,EAAI,IAAI,CAACF,MAAM,CAACC,MAAM,CAACC,EAAE;QAC1BK,UAAU,EAAE,IAAI,CAACjB,SAAS;QAC1BkB,SAAS,EAAE,IAAI,CAACjB,QAAQ;QACxBC,MAAM,EAAE,IAAI,CAACA;MACb,CAAC;MAEL,IAAI;QACJ,MAAM,IAAI,CAACK,MAAM,CAACY,QAAQ,CAAC,YAAY,EAAEH,OAAO,CAAC;QACjD,IAAI,CAACI,OAAO,CAACC,IAAI,CAAC;UAAEC,IAAI,EAAE;QAAM,CAAC,CAAC;MACpC,EAAE,OAAOC,KAAK,EAAE;QACdlB,OAAO,CAACkB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;;MAEE;MACA,IAAI,CAACC,MAAK,GAAI,IAAI;MAClB,IAAI,CAACxB,SAAQ,GAAI,EAAE;MACnB,IAAI,CAACC,QAAO,GAAI,EAAE;MAClB,IAAI,CAACC,MAAK,GAAI,EAAE;IAClB,CAAC;IAGH,MAAMuB,WAAWA,CAAA,EAAG;MAClB,MAAMC,WAAU,GAAI;QACdd,EAAC,EAAI,IAAI,CAACY,MAAM;QAChBP,UAAU,EAAE,IAAI,CAACjB,SAAS;QAC1BkB,SAAS,EAAE,IAAI,CAACjB,QAAQ;QACxBC,MAAM,EAAE,IAAI,CAACA;MACb,CAAC;MACP,IAAI;QACF,MAAM,IAAI,CAACK,MAAM,CAACY,QAAQ,CAAC,aAAa,EAAE,IAAI,CAACf,IAAI,CAAC;QACpD,IAAI,CAACgB,OAAO,CAACC,IAAI,CAAC;UAAEC,IAAI,EAAE;QAAO,CAAC,CAAC;MACrC,EAAE,OAAOC,KAAK,EAAE;QACdlB,OAAO,CAACkB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAED,MAAMI,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAM,IAAI,CAACpB,MAAM,CAACY,QAAQ,CAAC,YAAY,EAAE,IAAI,CAACf,IAAI,CAACQ,EAAE,CAAC;QACtD,IAAI,CAACQ,OAAO,CAACC,IAAI,CAAC;UAAEC,IAAI,EAAE;QAAO,CAAC,CAAC;MACrC,EAAE,OAAOC,KAAK,EAAE;QACdlB,OAAO,CAACkB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}