{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { mapGetters } from 'vuex';\nexport default {\n  data() {\n    return {\n      user: null\n    };\n  },\n  computed: {\n    ...mapGetters(['getUserList', 'getFilteredUserList', 'getUserById'])\n  },\n  computed: {\n    userId() {\n      console.log(this.$route.params.id + 'route params');\n      return this.$route.params.id;\n    },\n    user() {\n      this.$store.state.filteredUserList.find(user => user.id === this.userId);\n    }\n  },\n  mounted() {\n    console.log(this.getFilteredUserList + 'filtered user list');\n  },\n  methods: {\n    // async fetchUser() {\n    //   try {\n    //     // const response = await axios.get(`https://reqres.in/api/users/${this.userId}`);\n    //     console.log(this.userId + 'brak id')\n    //     console.log(this.user + 'that is the user from the state')\n    //     this.user = response.data.data;\n    //   } catch (error) {\n    //     console.error('Failed to fetch user details:', error);\n    //   }\n    // },\n\n    async saveChanges() {\n      try {\n        await this.$store.dispatch('updateUser', this.user);\n        this.$router.push({\n          name: 'home'\n        });\n      } catch (error) {\n        console.error('Failed to update user:', error);\n      }\n    },\n    async deleteUser() {\n      try {\n        await this.$store.dispatch('deleteUser', this.user.id);\n        this.$router.push({\n          name: 'home'\n        });\n      } catch (error) {\n        console.error('Failed to delete user:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","data","user","computed","userId","console","log","$route","params","id","$store","state","filteredUserList","find","mounted","getFilteredUserList","methods","saveChanges","dispatch","$router","push","name","error","deleteUser"],"sources":["C:\\Users\\User\\Desktop\\Client\\vue-starter-project\\src\\components\\Edit.vue"],"sourcesContent":["<template>\r\n  <div v-if=\"user\">\r\n    <h2>Edit User {{ user.id }}</h2>\r\n\r\n    <form @submit.prevent=\"saveChanges\">\r\n      <!-- Form fields for editing user details -->\r\n      <div>\r\n        <label>Full Name:</label>\r\n        <input type=\"text\" v-model=\"user.first_name\" />\r\n        <input type=\"text\" v-model=\"user.last_name\" />\r\n      </div>\r\n      <div>\r\n        <label>Avatar URL:</label>\r\n        <input type=\"text\" v-model=\"user.avatar\" />\r\n      </div>\r\n\r\n      <!-- Buttons for saving changes and deleting user -->\r\n      <div>\r\n        <button type=\"submit\">Save Changes</button>\r\n        <button @click=\"deleteUser\">Delete User</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex';\r\n\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      user: null\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters(['getUserList', 'getFilteredUserList', 'getUserById'])\r\n  },\r\n  computed: {\r\n    userId() {\r\n      console.log(this.$route.params.id + 'route params')\r\n      return this.$route.params.id;\r\n    },\r\n    user(){\r\n      this.$store.state.filteredUserList.find(user => user.id === this.userId);\r\n    }\r\n\r\n  },\r\n\r\n  mounted() {\r\n    console.log(this.getFilteredUserList + 'filtered user list')\r\n  },\r\n\r\n  methods: {\r\n    // async fetchUser() {\r\n    //   try {\r\n    //     // const response = await axios.get(`https://reqres.in/api/users/${this.userId}`);\r\n    //     console.log(this.userId + 'brak id')\r\n    //     console.log(this.user + 'that is the user from the state')\r\n    //     this.user = response.data.data;\r\n    //   } catch (error) {\r\n    //     console.error('Failed to fetch user details:', error);\r\n    //   }\r\n    // },\r\n\r\n    async saveChanges() {\r\n      try {\r\n        await this.$store.dispatch('updateUser', this.user);\r\n        this.$router.push({ name: 'home' });\r\n      } catch (error) {\r\n        console.error('Failed to update user:', error);\r\n      }\r\n    },\r\n\r\n    async deleteUser() {\r\n      try {\r\n        await this.$store.dispatch('deleteUser', this.user.id);\r\n        this.$router.push({ name: 'home' });\r\n      } catch (error) {\r\n        console.error('Failed to delete user:', error);\r\n      }\r\n    },\r\n  }\r\n};\r\n</script>\r\n"],"mappings":";AA0BA,SAASA,UAAS,QAAS,MAAM;AAGjC,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE;IACR,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACR,GAAGH,UAAU,CAAC,CAAC,aAAa,EAAE,qBAAqB,EAAE,aAAa,CAAC;EACrE,CAAC;EACDG,QAAQ,EAAE;IACRC,MAAMA,CAAA,EAAG;MACPC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAC,GAAI,cAAc;MAClD,OAAO,IAAI,CAACF,MAAM,CAACC,MAAM,CAACC,EAAE;IAC9B,CAAC;IACDP,IAAIA,CAAA,EAAE;MACJ,IAAI,CAACQ,MAAM,CAACC,KAAK,CAACC,gBAAgB,CAACC,IAAI,CAACX,IAAG,IAAKA,IAAI,CAACO,EAAC,KAAM,IAAI,CAACL,MAAM,CAAC;IAC1E;EAEF,CAAC;EAEDU,OAAOA,CAAA,EAAG;IACRT,OAAO,CAACC,GAAG,CAAC,IAAI,CAACS,mBAAkB,GAAI,oBAAoB;EAC7D,CAAC;EAEDC,OAAO,EAAE;IACP;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA,MAAMC,WAAWA,CAAA,EAAG;MAClB,IAAI;QACF,MAAM,IAAI,CAACP,MAAM,CAACQ,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAChB,IAAI,CAAC;QACnD,IAAI,CAACiB,OAAO,CAACC,IAAI,CAAC;UAAEC,IAAI,EAAE;QAAO,CAAC,CAAC;MACrC,EAAE,OAAOC,KAAK,EAAE;QACdjB,OAAO,CAACiB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAED,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAM,IAAI,CAACb,MAAM,CAACQ,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAChB,IAAI,CAACO,EAAE,CAAC;QACtD,IAAI,CAACU,OAAO,CAACC,IAAI,CAAC;UAAEC,IAAI,EAAE;QAAO,CAAC,CAAC;MACrC,EAAE,OAAOC,KAAK,EAAE;QACdjB,OAAO,CAACiB,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}