{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nimport axios from 'axios';\nexport default createStore({\n  state() {\n    return {\n      userList: [],\n      filteredUserList: []\n    };\n  },\n  mutations: {\n    setUserList(state, userList) {\n      state.userList = userList;\n      state.filteredUserList = userList;\n    },\n    filterUserList(state, searchQuery) {\n      if (searchQuery.trim() === '') {\n        state.filteredUserList = state.userList;\n        return;\n      }\n\n      // state.filteredUserList = state.userList.filter((user) => {\n      //   const fullName = user.fullName.toLowerCase();\n      //   return fullName.includes(searchQuery.toLowerCase());\n      // });\n    },\n\n    updateUser(state, updatedUser) {\n      const userIndex = state.userList.findIndex(user => user.id === updatedUser.id);\n      if (userIndex !== -1) {\n        const updatedUserCopy = {\n          ...state.userList[userIndex],\n          first_name: updatedUser.first_name,\n          last_name: updatedUser.last_name,\n          avatar: updatedUser.avatar\n        };\n        state.userList.splice(userIndex, 1, updatedUserCopy);\n        state.filteredUserList.splice(userIndex, 1, updatedUserCopy);\n      }\n    },\n    // updateUser(state, updatedUser) {\n    //   const userIndex = state.userList.findIndex((user) => user.id === updatedUser.id);\n    //   if (userIndex !== -1) {\n    //     const updatedUserCopy = {\n    //       ...state.userList[userIndex],\n    //       id: updatedUser.id,\n    //       first_name: updatedUser.first_name,\n    //       last_name: updatedUser.last_name,\n    //       avatar: updatedUser.avatar,\n    //     };\n    //     state.userList.splice(userIndex, 1, updatedUserCopy);\n    //     state.filteredUserList.splice(userIndex, 1, updatedUserCopy);\n    //   }\n    // },\n    deleteUser(state, userId) {\n      const userIndex = state.userList.findIndex(user => user.id === userId);\n      if (userIndex !== -1) {\n        // state.userList.splice(userIndex, 1);\n        state.filteredUserList.splice(userIndex, 1);\n      }\n    },\n    addUser(state, newUser) {\n      state.filteredUserList.push(newUser);\n    }\n  },\n  actions: {\n    async fetchUserList({\n      commit\n    }) {\n      try {\n        const response = await axios.get('https://reqres.in/api/users');\n        const userList = response.data.data.map(user => ({\n          id: user.id,\n          first_name: user.first_name,\n          last_name: user.last_name,\n          avatar: user.avatar,\n          fullName: `${user.first_name} ${user.last_name}`\n        }));\n        commit('setUserList', userList);\n      } catch (error) {\n        console.error('Failed to fetch user list:', error);\n      }\n    },\n    async updateUser({\n      commit\n    }, updatedUser) {\n      try {\n        // Make API request to update the user\n        // Replace `apiEndpoint` with the appropriate API endpoint for updating a user\n        // await axios.put(`https://reqres.in/api/users/${updatedUser.id}`, updatedUser);\n\n        commit('updateUser', updatedUser);\n      } catch (error) {\n        console.error('Failed to update user:', error);\n      }\n    },\n    async deleteUser({\n      commit\n    }, userId) {\n      try {\n        // Make API request to delete the user\n        // Replace `apiEndpoint` with the appropriate API endpoint for deleting a user\n        // await axios.delete(`https://reqres.in/api/users/${userId}`);\n\n        commit('deleteUser', userId);\n      } catch (error) {\n        console.error('Failed to delete user:', error);\n      }\n    },\n    async createUser({\n      commit\n    }, newUser) {\n      try {\n        // Make API request to create the user\n        // Replace `apiEndpoint` with the appropriate API endpoint for creating a user\n        // const response = await axios.post('https://reqres.in/api/users', newUser);\n        // const id = response.data.id;\n        const createdUser = {\n          id: newUser.id,\n          first_name: newUser.first_name,\n          last_name: newUser.last_name,\n          avatar: newUser.avatar,\n          fullName: `${newUser.first_name} ${newUser.last_name}`\n        };\n        commit('addUser', createdUser);\n      } catch (error) {\n        console.error('Failed to create user:', error);\n        throw error;\n      }\n    },\n    filterUserList({\n      commit,\n      state\n    }, searchQuery) {\n      commit('filterUserList', searchQuery);\n    }\n  },\n  getters: {\n    getUserById: state => id => {\n      return state.filteredUserList.find(user => user.id === id);\n    },\n    getUserList: state => {\n      return state.userList;\n    },\n    getFilteredUserList: state => {\n      return state.filteredUserList;\n    }\n  }\n});","map":{"version":3,"names":["createStore","axios","state","userList","filteredUserList","mutations","setUserList","filterUserList","searchQuery","trim","updateUser","updatedUser","userIndex","findIndex","user","id","updatedUserCopy","first_name","last_name","avatar","splice","deleteUser","userId","addUser","newUser","push","actions","fetchUserList","commit","response","get","data","map","fullName","error","console","createUser","createdUser","getters","getUserById","find","getUserList","getFilteredUserList"],"sources":["C:/Users/User/Desktop/Client/vue-starter-project/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex';\nimport axios from 'axios';\n\nexport default createStore({\n  state() {\n    return {\n      userList: [],\n      filteredUserList: [],\n    };\n  },\n  mutations: {\n    setUserList(state, userList) {\n      state.userList = userList;\n      state.filteredUserList = userList;\n    },\n    filterUserList(state, searchQuery) {\n      if (searchQuery.trim() === '') {\n        state.filteredUserList = state.userList;\n        return;\n      }\n\n      // state.filteredUserList = state.userList.filter((user) => {\n      //   const fullName = user.fullName.toLowerCase();\n      //   return fullName.includes(searchQuery.toLowerCase());\n      // });\n    },\n\n    updateUser(state, updatedUser) {\n      const userIndex = state.userList.findIndex((user) => user.id === updatedUser.id);\n      if (userIndex !== -1) {\n        const updatedUserCopy = {\n          ...state.userList[userIndex],\n          first_name: updatedUser.first_name,\n          last_name: updatedUser.last_name,\n          avatar: updatedUser.avatar,\n        };\n        state.userList.splice(userIndex, 1, updatedUserCopy);\n        state.filteredUserList.splice(userIndex, 1, updatedUserCopy);\n      }\n    },\n    \n    // updateUser(state, updatedUser) {\n    //   const userIndex = state.userList.findIndex((user) => user.id === updatedUser.id);\n    //   if (userIndex !== -1) {\n    //     const updatedUserCopy = {\n    //       ...state.userList[userIndex],\n    //       id: updatedUser.id,\n    //       first_name: updatedUser.first_name,\n    //       last_name: updatedUser.last_name,\n    //       avatar: updatedUser.avatar,\n    //     };\n    //     state.userList.splice(userIndex, 1, updatedUserCopy);\n    //     state.filteredUserList.splice(userIndex, 1, updatedUserCopy);\n    //   }\n    // },\n    deleteUser(state, userId) {\n      const userIndex = state.userList.findIndex((user) => user.id === userId);\n      if (userIndex !== -1) {\n        // state.userList.splice(userIndex, 1);\n        state.filteredUserList.splice(userIndex, 1);\n      }\n    },\n    addUser(state, newUser) {\n      state.filteredUserList.push(newUser);\n\n    },\n  },\n  actions: {\n    async fetchUserList({ commit }) {\n      try {\n        const response = await axios.get('https://reqres.in/api/users');\n        const userList = response.data.data.map((user) => ({\n          id: user.id,\n          first_name: user.first_name,\n          last_name: user.last_name,\n          avatar: user.avatar,\n          fullName: `${user.first_name} ${user.last_name}`,\n        }));\n        commit('setUserList', userList);\n      } catch (error) {\n        console.error('Failed to fetch user list:', error);\n      }\n    },\n    async updateUser({ commit }, updatedUser) {\n      try {\n        // Make API request to update the user\n        // Replace `apiEndpoint` with the appropriate API endpoint for updating a user\n        // await axios.put(`https://reqres.in/api/users/${updatedUser.id}`, updatedUser);\n\n        commit('updateUser', updatedUser);\n      } catch (error) {\n        console.error('Failed to update user:', error);\n      }\n    },\n    async deleteUser({ commit }, userId) {\n      try {\n        // Make API request to delete the user\n        // Replace `apiEndpoint` with the appropriate API endpoint for deleting a user\n        // await axios.delete(`https://reqres.in/api/users/${userId}`);\n\n        commit('deleteUser', userId);\n      } catch (error) {\n        console.error('Failed to delete user:', error);\n      }\n    },\n    async createUser({ commit}, newUser) {\n      try {\n        // Make API request to create the user\n        // Replace `apiEndpoint` with the appropriate API endpoint for creating a user\n        // const response = await axios.post('https://reqres.in/api/users', newUser);\n        // const id = response.data.id;\n        const createdUser = {\n          id: newUser.id,\n          first_name: newUser.first_name,\n          last_name: newUser.last_name,\n          avatar: newUser.avatar,\n          fullName: `${newUser.first_name} ${newUser.last_name}`,\n        };\n        commit('addUser', createdUser);\n\n      } catch (error) {\n        console.error('Failed to create user:', error);\n        throw error;\n      }\n    },\n    filterUserList({ commit, state }, searchQuery) {\n      commit('filterUserList', searchQuery);\n    },\n  },\n  getters: {\n    getUserById: (state) => (id) => {\n      return state.filteredUserList.find((user) => user.id === id);\n    },\n    getUserList: (state) => {\n      return state.userList;\n    },\n    getFilteredUserList: (state) => {\n      return state.filteredUserList;\n    },\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}